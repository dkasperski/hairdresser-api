# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    sensio_framework_extra.view.listener:
        alias: Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener

    command_handlers:
        namespace: App\Domain\CommandHandler\
        resource: '%kernel.project_dir%/src/Domain/CommandHandler/*'
        tags:
            - { name: messenger.message_handler, bus: command.bus }

#    query_handlers:
#        namespace: App\Domain\QueryHandler\
#        resource: '%kernel.project_dir%/src/Domain/QueryHandler/*'
#        tags:
#            - { name: messenger.message_handler, bus: query.bus }

    App\Entity\Booking\BookingFactory:
        autowire: true

    app.booking_listener:
        class: 'App\Domain\Event\BookingCreated\BookingListener'
        tags:
            - { name: 'kernel.event_listener', async: true, event: 'booking.created', method: 'onBookingCreate' }
